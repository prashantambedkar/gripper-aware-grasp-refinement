method: conv_sdfnet
data:
  input_type: pointcloud
  classes: ['0000','0001','0002',
  '0003','0004','0005',
  '0006','0007','0008',
  '0009','0010','0011',
  '0012','0013','0014',
  '0015','0016','0017',
  '0018','0019','0020',
  '0021','0022','0023',
  '0024','0025','0026',
  '0027','0028','0029',
  '0030','0031','0032',
  '0033','0034','0035',
  '0036','0037','0038',
  '0039','0040','0041',
  '0042','0043','0044',
  '0045','0046','0047',
  '0048','0049','0050',
  ]  # this is the only folder anyway
  path: data/gag-refine/scenes/  # next sub-folder is 'scenes', which is the class
  pointcloud_n: 10000
  pointcloud_noise: 0.0005  # it will be applied after scaling, i.e. it's not actual [m] but [m]/0.297
  points_subsample: [1024, 1024]  # will balance points within and outside the volumes (out, in)
  points_file: points_iou.npz
  points_iou_file: points_iou.npz
  pointcloud_file: full_point_cloud.npz
  pointcloud_chamfer_file: full_point_cloud.npz
  multi_files: null
  voxels_file: null
  padding: 0.08
  clamp_sdf: 0.05  # [m], clamp the sdf values at this threshold (applies to the real scene as they are not transformed)
  clamp_margin_sdf: 0  # will auto-rescale [-clamp_sdf-margin, clamp_sdf+margin] to [-1, 1], set None if undesired
  sample_grasps: 2048  # will be auto-balanced between objects and grasp qualities
  clamp_fc: 0.01  # clamping the ferrari canny score of the grasps, null if no clamping desired
  clamp_margin_fc: 0
  contact_noise: 0.001  # sigma in [m]
  n_fingers: [2]  # must be list
model:
  encoder: pointnet_local_pool
  encoder_kwargs:
    hidden_dim: 32
    plane_type: ['xz', 'xy', 'yz']
    plane_resolution: 128
    unet: True
    unet_kwargs:
      depth: 5
      merge_mode: concat
      start_filts: 32
  decoder: simple_local
  decoder_kwargs:
    sample_mode: bilinear  # bilinear / nearest
    hidden_size: 32
  c_dim: 32
  grasp_quality_net: null  # simple_gqe or null if you don't want to train grasp quality net
  grasp_quality_net_kwargs:
    hidden_size: 64
    sample_mode: bilinear  # bilinear / nearest
    n_blocks: 5
    pooling: max  # max | avg
training:
  out_dir: out/gag_3plane_full_sdf
  batch_size: 20
  model_selection_metric: sdf_iou  # todo: should we use sth else here, which also takes into account grasps?
  model_selection_mode: maximize
  print_every: 5
  visualize_every: 50
  validate_every: 1000
  checkpoint_every: 1000
  backup_every: 20000
  n_workers: 8
  n_workers_val: 4
test:
  threshold: 0.5  # should be 0.5 for SDF, corresponds to surface at sdf_value==0
  eval_mesh: true
  eval_pointcloud: false
  remove_wall: true
  model_file: model_best.pt
generation:
  vis_n_outputs: 2
  refine: false
  n_x: 128
  n_z: 1
  generation_dir: generation
